library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity Aula is
	PORT(
		CLK		: in STD_LOGIC;
		RES		: in STD_LOGIC;
		Z			: out STD_LOGIC_VECTOR(7 downto 0)
	);
 
end Aula;

architecture behave of Aula is

signal X				: STD_LOGIC_VECTOR(7 downto 0);
signal Zin			: STD_LOGIC_VECTOR(7 downto 0);

signal PCin			: STD_LOGIC_VECTOR(4 downto 0);

signal DATA			: STD_LOGIC_VECTOR(15 downto 0);

signal UPCODE		: STD_LOGIC_VECTOR(7 downto 0);
signal OPERATOR	: STD_LOGIC_VECTOR(7 downto 0);

signal SIG 			: STD_LOGIC_VECTOR(7 downto 0);

signal INC 			: STD_LOGIC;
signal RES_PC		: STD_LOGIC;
signal STOP			: STD_LOGIC;
signal LOAD			: STD_LOGIC;
signal SEL 			: STD_LOGIC_VECTOR(3 downto 0);

component ULA is
	PORT(
		X		: in STD_LOGIC_VECTOR(7 downto 0);
		Y		: in STD_LOGIC_VECTOR(7 downto 0);
		SEL	: in STD_LOGIC_VECTOR(3 downto 0);
		Z		: out STD_LOGIC_VECTOR(7 downto 0)
	);
end component;

component REG is
	PORT(
		X		: in STD_LOGIC_VECTOR(7 downto 0);
		CLK	: in STD_LOGIC;
		Z		: out STD_LOGIC_VECTOR(7 downto 0)
	);
end component;

component PC is
	PORT(
		RES	: in STD_LOGIC;
		INC	: in STD_LOGIC;
		Z		: out STD_LOGIC_VECTOR(4 downto 0)
	);
end component;

component Memory is
	PORT(
		ADRR	: IN STD_LOGIC_VECTOR (4 DOWNTO 0);
		CLK	: IN STD_LOGIC  := '1';
		Q		: OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
	);
end component;

component CU is
	PORT(
		CLK		: in STD_LOGIC;
		RES		: in STD_LOGIC;
		UPCODE	: in STD_LOGIC_VECTOR (3 DOWNTO 0);
		SIG		: OUT STD_LOGIC_VECTOR (7 DOWNTO 0)
	);
end component;

begin

	u1: ULA port map(
		X		=> X,
		Y   	=> OPERATOR,
		SEL 	=> SEL,
		Z   	=> Zin
	);
	
	u2: REG port map(
		X		=> Zin,
		CLK 	=> LOAD,
		Z		=> X
	);
	
	u3: PC port map(
		RES 	=> RES_PC,
		INC 	=> INC,
		Z   	=> PCin
	);
	
	u4: Memory port map(
		ADRR 	=> PCin,
		CLK  	=> CLK,
		Q    	=> DATA
	);
	
	u5: CU port map(
		CLK 		=> CLK,
		RES		=> RES,
		UPCODE	=> UPCODE,
		SIG		=> SIG
	);
	
	UPCODE 	<= DATA(15 downto 8);
	OPERATOR <= DATA(7 downto 0);
	
	
	INC		<= SIG(7);
	RES_PC	<= SIG(6);
	STOP		<= SIG(5);
	LOAD		<= SIG(4);
	SEL		<= SIG(3 downto 0);
	
	Z 			<= Zin;

end behave;
