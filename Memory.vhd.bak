library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity Memory is
	PORT(
		ADDR	: IN STD_LOGIC_VECTOR (3 DOWNTO 0);
		CLK	: IN STD_LOGIC;
		Q		: OUT STD_LOGIC_VECTOR (15 DOWNTO 0)
	);
 
end Memory;

architecture Memory_Behave of Memory is

type mem_t is array (0 to 15) of STD_LOGIC_VECTOR(15 downto 0);

signal mem : mem_t := (
	"0000000000000000",
	"0000010100000010",
	"0000000100000101",
	"0000000100001000",
	"0000001000000101",
	"0000010000000000",
	"0000001000001111",
	"0000001100000100",
	"0000010110101010",
	"0000000101000100",
	"0000000000000000",
	"0000000000000000",
	"0000011000000000",
	"0000000000000000",
	"0000000000000000",
	"0000000000000000"
);

begin

	process (CLK)
		variable ADDR_IN: natural range 0 to 3;
	begin
		ADDR_IN := to_integer(unsigned(ADDR));
		
		if (rising_edge(CLK)) then
			Q <= mem(RADDR_IN);
		end if;
		
	end process;

end Memory_Behave;
